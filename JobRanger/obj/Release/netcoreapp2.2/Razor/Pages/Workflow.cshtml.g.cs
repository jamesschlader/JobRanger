#pragma checksum "C:\Users\Owner\source\repos\JobRanger\JobRanger\Pages\Workflow.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "7eb3f19bbbfe61e210b6f76ef3f606576b528641"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(JobRanger.Pages.Pages_Workflow), @"mvc.1.0.razor-page", @"/Pages/Workflow.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.RazorPageAttribute(@"/Pages/Workflow.cshtml", typeof(JobRanger.Pages.Pages_Workflow), null)]
namespace JobRanger.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Owner\source\repos\JobRanger\JobRanger\Pages\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#line 2 "C:\Users\Owner\source\repos\JobRanger\JobRanger\Pages\_ViewImports.cshtml"
using JobRanger;

#line default
#line hidden
#line 3 "C:\Users\Owner\source\repos\JobRanger\JobRanger\Pages\_ViewImports.cshtml"
using JobRanger.Data;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7eb3f19bbbfe61e210b6f76ef3f606576b528641", @"/Pages/Workflow.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c68a822ad2a8e1ef3467423615f697fe3ed6f12d", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Workflow : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 3 "C:\Users\Owner\source\repos\JobRanger\JobRanger\Pages\Workflow.cshtml"
  
    ViewData["Title"] = "Workflow";
    Layout = "~/Pages/Shared/_Layout.cshtml";

#line default
#line hidden
            BeginContext(136, 4556, true);
            WriteLiteral(@"

<h1 class=""display-1"">[job]<span style=""color: darkgreen"">RANGER</span> </h1>
<h4>helps you become a master of the job search wilderness.</h4>
<br />
<br />

<h5><strong>Get ready to copy-and-paste</strong></h5>
<br />
<p>You'll be spending a lot of time switching between different websites, copying parts, and then pasting into [job]<span style=""color: darkgreen"">RANGER</span>. However, once you have entered the information for your favorite employers, jobs, and contacts you'll be reusing that information over and over again.</p>
<br />
<h5>
    <a class=""btn btn-light"" data-toggle=""collapse"" href=""#enter-jobs"" role=""button"" aria-expanded=""false"" aria-controls=""enter-jobs"" style=""color: darkgreen""><strong>When you are looking for jobs...</strong></a>

</h5>
<br />
<div class=""collapse"" id=""enter-jobs"">
    <div class=""card card-body"">
        <ol>
            <li>Use the search engine links to find jobs you like. Your search will be in a separate window from [job]<span style=""color: darkg");
            WriteLiteral(@"reen"">RANGER</span>. Keep both windows open.</li>
            <li>Toggle back to [job]<span style=""color: darkgreen"">RANGER</span>. If you've never applied with the employer, navigate to <strong>Employers</strong>.</li>
            <li>
                <ul>
                    Continue with these steps if the employer is new, otherwise skip these steps.
                    <li>Choose <span style=""color:rgb(161, 72, 41) "">Create New</span> to add a new Employer.</li>
                    <li>Copy and paste the name of the employer from the job description shown in the job search into the Employer field in the Employer <span style=""color:rgb(161, 72, 41) "">Create New</span> Form.</li>
                    <li>Open another window and Google the name of the employer (feel free to paste the name).</li>
                    <li>Find the website for the employer and select it. Copy the url from the url field in the browser.</li>
                    <li>Return to the Employer <span style=""color:rgb(161, 72, 41)");
            WriteLiteral(@" "">Create New</span> Form on [job]<span style=""color: darkgreen"">RANGER</span> and paste the url into the Website field.</li>
                    <li>Feel free to add other details on the form as you see fit. You only need an Employer Name and Website to continue.</li>
                </ul>
            </li>
            <li>
                If you have the employer's information saved, it's time to gather job information.
                <ul>
                    <li>Navigate to Jobs.</li>
                    <li>Select <span style=""color:rgb(161, 72, 41) "">Create New</span>.</li>
                    <li>Copy the job title from job description and paste into the Name field.</li>
                    <li>Copy the job number and paste into the Job Number field. If there isn't a job number posted, select any number you'd like.</li>
                    <li>Copy and paste the entire job description into the Job Description field. This information will come in handy when customizing your resume and cover l");
            WriteLiteral(@"etter for this job.</li>
                    <li>Select the employer from the drop down list.</li>
                    <li>Click the <button class=""btn btn-primary"">Create</button> button to add the job.</li>
                </ul>
            </li>

        </ol>
        <br />
        <p><strong>Congratulations!</strong> You've added a Job and associated it with an Employer.</p>
        
    </div>
    <br/>
</div>


<h5>
    <a class=""btn btn-light"" data-toggle=""collapse"" href=""#enter-actions"" role=""button"" aria-expanded=""false"" aria-controls=""enter-actions"" style=""color: darkgreen""><strong>When you are looking to start taking action...</strong></a>

</h5>
<br />
<div class=""collapse"" id=""enter-actions"">
    <div class=""card card-body"">
        <p>There are many items on your to-do list when you shop for a new job. Let's look at how you can keep track of what you've already done and what you need to do.</p>
        <p>You won't be doing anything in a vacuum. Your activities are always");
            WriteLiteral(@" associated with either with a particular job or else a contact.</p>
    </div>
    <br/>
</div>

<h5>
    <a class=""btn btn-light"" data-toggle=""collapse"" href=""#enter-network"" role=""button"" aria-expanded=""false"" aria-controls=""enter-network"" style=""color: darkgreen""><strong>When you are ready to Network...</strong></a>

</h5>
<br />
<div class=""collapse"" id=""enter-network"">
    <div class=""card card-body"">

    </div>
    <br/>
</div>


");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<JobRanger.Pages.WorkflowModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<JobRanger.Pages.WorkflowModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<JobRanger.Pages.WorkflowModel>)PageContext?.ViewData;
        public JobRanger.Pages.WorkflowModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
